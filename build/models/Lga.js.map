{"version":3,"sources":["../../server/models/Lga.js"],"names":["mongoose","require","Promise","global","lgaSchema","Schema","name","type","String","trim","unique","stateId","ObjectId","ref","required","collection","timestamps","module","exports","model"],"mappings":";;AAAA,IAAMA,WAAWC,QAAQ,UAAR,CAAjB;AACA;AACAD,SAASE,OAAT,GAAmBC,OAAOD,OAA1B;;AAEA;AACA,IAAME,YAAY,IAAIJ,SAASK,MAAb,CAAoB;AACpCC,QAAM;AACJC,UAAMC,MADF;AAEJC,UAAM,IAFF;AAGJR,aAAS,0BAHL;AAIJS,YAAQ;AAJJ,GAD8B;AAOpCC,WAAS;AACPJ,UAAMP,SAASK,MAAT,CAAgBO,QADf;AAEPC,SAAK,OAFE;AAGPC,cAAU;AAHH;AAP2B,CAApB,EAYf,EAAEC,YAAY,KAAd,EAAqBC,YAAY,IAAjC,EAZe,CAAlB;;AAeAC,OAAOC,OAAP,GAAiBlB,SAASmB,KAAT,CAAe,KAAf,EAAsBf,SAAtB,CAAjB","file":"Lga.js","sourcesContent":["const mongoose = require('mongoose');\n// Use global promise for mongoose\nmongoose.Promise = global.Promise;\n\n// Make Schema\nconst lgaSchema = new mongoose.Schema({\n  name: {\n    type: String,\n    trim: true,\n    require: 'Please enter a valid Lga',\n    unique: true,\n  },\n  stateId: {\n    type: mongoose.Schema.ObjectId,\n    ref: 'State',\n    required: 'Lga should have a valid State!',\n  },\n}, { collection: 'lga', timestamps: true });\n\n\nmodule.exports = mongoose.model('Lga', lgaSchema);\n"]}